<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hs.checkitemgroup.mapper.CheckItemGroupMapper">
  <resultMap id="BaseResultMap" type="cn.hs.checkitemgroup.pojo.CheckItemGroup">
    <id column="hosnum" jdbcType="VARCHAR" property="hosnum" />
    <id column="group_id" jdbcType="VARCHAR" property="groupId" />
    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
    <result column="equipment_id" jdbcType="VARCHAR" property="equipmentId" />
    <result column="sample_type" jdbcType="VARCHAR" property="sampleType" />
    <result column="order_number" jdbcType="INTEGER" property="orderNumber" />
    <result column="trace_log" jdbcType="TIMESTAMP" property="traceLog" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    hosnum, group_id, group_name, equipment_id, sample_type, order_number, trace_log
  </sql>
  <select id="selectByExample" parameterType="cn.hs.checkitemgroup.pojo.CheckItemGroupExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from check_item_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="cn.hs.checkitemgroup.pojo.CheckItemGroupKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from check_item_group
    where hosnum = #{hosnum,jdbcType=VARCHAR}
      and group_id = #{groupId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.hs.checkitemgroup.pojo.CheckItemGroupKey">
    delete from check_item_group
    where hosnum = #{hosnum,jdbcType=VARCHAR}
      and group_id = #{groupId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.hs.checkitemgroup.pojo.CheckItemGroupExample">
    delete from check_item_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.hs.checkitemgroup.pojo.CheckItemGroup">
    insert into check_item_group (hosnum, group_id, group_name, 
      equipment_id, sample_type, order_number, 
      trace_log)
    values (#{hosnum,jdbcType=VARCHAR}, #{groupId,jdbcType=VARCHAR}, #{groupName,jdbcType=VARCHAR}, 
      #{equipmentId,jdbcType=VARCHAR}, #{sampleType,jdbcType=VARCHAR}, #{orderNumber,jdbcType=INTEGER}, 
      #{traceLog,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.hs.checkitemgroup.pojo.CheckItemGroup">
    insert into check_item_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="hosnum != null">
        hosnum,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="groupName != null">
        group_name,
      </if>
      <if test="equipmentId != null">
        equipment_id,
      </if>
      <if test="sampleType != null">
        sample_type,
      </if>
      <if test="orderNumber != null">
        order_number,
      </if>
      <if test="traceLog != null">
        trace_log,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="hosnum != null">
        #{hosnum,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="groupName != null">
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="equipmentId != null">
        #{equipmentId,jdbcType=VARCHAR},
      </if>
      <if test="sampleType != null">
        #{sampleType,jdbcType=VARCHAR},
      </if>
      <if test="orderNumber != null">
        #{orderNumber,jdbcType=INTEGER},
      </if>
      <if test="traceLog != null">
        #{traceLog,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hs.checkitemgroup.pojo.CheckItemGroupExample" resultType="java.lang.Long">
    select count(*) from check_item_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update check_item_group
    <set>
      <if test="record.hosnum != null">
        hosnum = #{record.hosnum,jdbcType=VARCHAR},
      </if>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=VARCHAR},
      </if>
      <if test="record.groupName != null">
        group_name = #{record.groupName,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentId != null">
        equipment_id = #{record.equipmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.sampleType != null">
        sample_type = #{record.sampleType,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNumber != null">
        order_number = #{record.orderNumber,jdbcType=INTEGER},
      </if>
      <if test="record.traceLog != null">
        trace_log = #{record.traceLog,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update check_item_group
    set hosnum = #{record.hosnum,jdbcType=VARCHAR},
      group_id = #{record.groupId,jdbcType=VARCHAR},
      group_name = #{record.groupName,jdbcType=VARCHAR},
      equipment_id = #{record.equipmentId,jdbcType=VARCHAR},
      sample_type = #{record.sampleType,jdbcType=VARCHAR},
      order_number = #{record.orderNumber,jdbcType=INTEGER},
      trace_log = #{record.traceLog,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.hs.checkitemgroup.pojo.CheckItemGroup">
    update check_item_group
    <set>
      <if test="groupName != null">
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="equipmentId != null">
        equipment_id = #{equipmentId,jdbcType=VARCHAR},
      </if>
      <if test="sampleType != null">
        sample_type = #{sampleType,jdbcType=VARCHAR},
      </if>
      <if test="orderNumber != null">
        order_number = #{orderNumber,jdbcType=INTEGER},
      </if>
      <if test="traceLog != null">
        trace_log = #{traceLog,jdbcType=TIMESTAMP},
      </if>
    </set>
    where hosnum = #{hosnum,jdbcType=VARCHAR}
      and group_id = #{groupId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.hs.checkitemgroup.pojo.CheckItemGroup">
    update check_item_group
    set group_name = #{groupName,jdbcType=VARCHAR},
      equipment_id = #{equipmentId,jdbcType=VARCHAR},
      sample_type = #{sampleType,jdbcType=VARCHAR},
      order_number = #{orderNumber,jdbcType=INTEGER},
      trace_log = #{traceLog,jdbcType=TIMESTAMP}
    where hosnum = #{hosnum,jdbcType=VARCHAR}
      and group_id = #{groupId,jdbcType=VARCHAR}
  </update>


  <select id="selectAllCheckItemGroup" resultMap="BaseResultMap">
    select distinct group_id,group_name
    from check_item_group
    where hosnum = #{hosNum} and equipment_id = #{equipmentId}
  </select>
  <select id="getcheckItemGroups" resultMap="BaseResultMap">
    select cig.*, em2.item_name as equipmentName
    from check_item_group cig
    left join equipment em2 on cig.equipment_id = em2.item_id
    <if test="equipmentId != null and equipmentId != ''">
      join equipment em on cig.equipment_id = em.item_id and cig.equipment_id = #{equipmentId}
    </if>
    where cig.hosnum = #{hosNum}
    <if test="checkItemGroup != null and checkItemGroup != ''">
      and (cig.group_id LIKE '%' #{checkItemGroup} '%' OR cig.group_name LIKE '%' #{checkItemGroup} '%')
    </if>
  </select>
  <delete id="deleteCheckItemGroups">
    delete from check_item_group
    where hosnum = #{hosNum} and group_id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <select id="getAllcheckItemGroupName" resultType="java.lang.String">
    select distinct group_name
    from check_item_group
    where hosnum = #{hosNum}
  </select>
  <select id="getMaxId" resultType="java.lang.String">
    select IF(max(cast(group_id as unsigned int)) = '' || max(cast(group_id as unsigned int)) = NULL,
          '1000',
           max(cast(group_id as unsigned int)) + 1)
    from check_item_group
    where hosnum = #{hosNum}
  </select>
  <select id="getAllSampleType" resultType="java.lang.String">
    select distinct sample_type
    from check_item_group
    where hosnum = #{hosNum}
  </select>
  <select id="getcheckItemNameList" resultType="cn.hs.checkitem.pojo.CheckItem">
    select ci.item_name as itemName,ci.item_id as itemId
    from check_item ci
    join check_item_group_detail cigd on ci.item_id = cigd.item_id and cigd.item_group_id = #{checkItemGroupId} and cigd.hosnum = #{hosNum}
    where ci.hosnum = #{hosNum}
  </select>
  <select id="getAssociatedCheckItemGroup" resultMap="BaseResultMap">
    select cig.group_id,cig.group_name
    from check_item_group cig
    join check_item_group_detail cigd on cigd.item_group_id = cig.group_id and cigd.hosnum = #{hosNum}
    join check_item ci on cigd.item_id = ci.item_id and ci.item_id = #{checkItemId} and ci.hosnum = #{hosNum}
    where cig.hosnum = #{hosNum}
  </select>
</mapper>