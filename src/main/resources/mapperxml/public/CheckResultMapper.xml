<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hs.publicclass.mapper.CheckResultMapper">
  <resultMap id="BaseResultMap" type="cn.hs.publicclass.table.checkresult.CheckResult">
    <id column="hosnum" jdbcType="VARCHAR" property="hosnum" />
    <id column="check_application_id" jdbcType="VARCHAR" property="checkApplicationId" />
    <id column="check_item_id" jdbcType="VARCHAR" property="checkItemId" />
    <result column="result" jdbcType="VARCHAR" property="result" />
    <result column="trace_log" jdbcType="TIMESTAMP" property="traceLog" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    hosnum, check_application_id, check_item_id, result, trace_log
  </sql>
  <select id="selectByExample" parameterType="cn.hs.publicclass.table.checkresult.CheckResultExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from check_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="cn.hs.publicclass.table.checkresult.CheckResultKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from check_result
    where hosnum = #{hosnum,jdbcType=VARCHAR}
      and check_application_id = #{checkApplicationId,jdbcType=VARCHAR}
      and check_item_id = #{checkItemId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.hs.publicclass.table.checkresult.CheckResultKey">
    delete from check_result
    where hosnum = #{hosnum,jdbcType=VARCHAR}
      and check_application_id = #{checkApplicationId,jdbcType=VARCHAR}
      and check_item_id = #{checkItemId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.hs.publicclass.table.checkresult.CheckResultExample">
    delete from check_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.hs.publicclass.table.checkresult.CheckResult">
    insert into check_result (hosnum, check_application_id, check_item_id, 
      result, trace_log)
    values (#{hosnum,jdbcType=VARCHAR}, #{checkApplicationId,jdbcType=VARCHAR}, #{checkItemId,jdbcType=VARCHAR}, 
      #{result,jdbcType=VARCHAR}, #{traceLog,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.hs.publicclass.table.checkresult.CheckResult">
    insert into check_result
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="hosnum != null">
        hosnum,
      </if>
      <if test="checkApplicationId != null">
        check_application_id,
      </if>
      <if test="checkItemId != null">
        check_item_id,
      </if>
      <if test="result != null">
        result,
      </if>
      <if test="traceLog != null">
        trace_log,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="hosnum != null">
        #{hosnum,jdbcType=VARCHAR},
      </if>
      <if test="checkApplicationId != null">
        #{checkApplicationId,jdbcType=VARCHAR},
      </if>
      <if test="checkItemId != null">
        #{checkItemId,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        #{result,jdbcType=VARCHAR},
      </if>
      <if test="traceLog != null">
        #{traceLog,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hs.publicclass.table.checkresult.CheckResultExample" resultType="java.lang.Long">
    select count(*) from check_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <update id="updateByExampleSelective" parameterType="map">
    update check_result
    <set>
      <if test="record.hosnum != null">
        hosnum = #{record.hosnum,jdbcType=VARCHAR},
      </if>
      <if test="record.checkApplicationId != null">
        check_application_id = #{record.checkApplicationId,jdbcType=VARCHAR},
      </if>
      <if test="record.checkItemId != null">
        check_item_id = #{record.checkItemId,jdbcType=VARCHAR},
      </if>
      <if test="record.result != null">
        result = #{record.result,jdbcType=VARCHAR},
      </if>
      <if test="record.traceLog != null">
        trace_log = #{record.traceLog,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update check_result
    set hosnum = #{record.hosnum,jdbcType=VARCHAR},
      check_application_id = #{record.checkApplicationId,jdbcType=VARCHAR},
      check_item_id = #{record.checkItemId,jdbcType=VARCHAR},
      result = #{record.result,jdbcType=VARCHAR},
      trace_log = #{record.traceLog,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.hs.publicclass.table.checkresult.CheckResult">
    update check_result
    <set>
      <if test="result != null">
        result = #{result,jdbcType=VARCHAR},
      </if>
      <if test="traceLog != null">
        trace_log = #{traceLog,jdbcType=TIMESTAMP},
      </if>
    </set>
    where hosnum = #{hosnum,jdbcType=VARCHAR}
      and check_application_id = #{checkApplicationId,jdbcType=VARCHAR}
      and check_item_id = #{checkItemId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.hs.publicclass.table.checkresult.CheckResult">
    update check_result
    set result = #{result,jdbcType=VARCHAR},
      trace_log = #{traceLog,jdbcType=TIMESTAMP}
    where hosnum = #{hosnum,jdbcType=VARCHAR}
      and check_application_id = #{checkApplicationId,jdbcType=VARCHAR}
      and check_item_id = #{checkItemId,jdbcType=VARCHAR}
  </update>



  <select id="getCheckResult"  resultMap="BaseResultMap">
    select check_item_id,result
    from check_result
    where hosnum = #{hosNum} and check_application_id = #{checkApplicationId}
  </select>
</mapper>