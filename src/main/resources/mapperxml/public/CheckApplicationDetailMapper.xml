<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hs.publicclass.mapper.CheckApplicationDetailMapper">
    <resultMap id="BaseResultMap" type="cn.hs.publicclass.table.checkapplicationdetail.CheckApplicationDetail">
        <id column="hosnum" jdbcType="VARCHAR" property="hosnum"/>
        <id column="check_application_id" jdbcType="VARCHAR" property="checkApplicationId"/>
        <id column="check_item_group_id" jdbcType="VARCHAR" property="checkItemGroupId"/>
        <result column="check_item_group_name" jdbcType="VARCHAR" property="checkItemGroupName"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    hosnum, check_application_id, check_item_group_id, check_item_group_name
  </sql>
    <select id="selectByExample"
            parameterType="cn.hs.publicclass.table.checkapplicationdetail.CheckApplicationDetailExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from check_application_detail
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey"
            parameterType="cn.hs.publicclass.table.checkapplicationdetail.CheckApplicationDetailKey"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from check_application_detail
        where hosnum = #{hosnum,jdbcType=VARCHAR}
        and check_application_id = #{checkApplicationId,jdbcType=VARCHAR}
        and check_item_group_id = #{checkItemGroupId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey"
            parameterType="cn.hs.publicclass.table.checkapplicationdetail.CheckApplicationDetailKey">
    delete from check_application_detail
    where hosnum = #{hosnum,jdbcType=VARCHAR}
      and check_application_id = #{checkApplicationId,jdbcType=VARCHAR}
      and check_item_group_id = #{checkItemGroupId,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample"
            parameterType="cn.hs.publicclass.table.checkapplicationdetail.CheckApplicationDetailExample">
        delete from check_application_detail
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.hs.publicclass.table.checkapplicationdetail.CheckApplicationDetail">
    insert into check_application_detail (hosnum, check_application_id, check_item_group_id, 
      check_item_group_name)
    values (#{hosnum,jdbcType=VARCHAR}, #{checkApplicationId,jdbcType=VARCHAR}, #{checkItemGroupId,jdbcType=VARCHAR}, 
      #{checkItemGroupName,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="cn.hs.publicclass.table.checkapplicationdetail.CheckApplicationDetail">
        insert into check_application_detail
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="hosnum != null">
                hosnum,
            </if>
            <if test="checkApplicationId != null">
                check_application_id,
            </if>
            <if test="checkItemGroupId != null">
                check_item_group_id,
            </if>
            <if test="checkItemGroupName != null">
                check_item_group_name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="hosnum != null">
                #{hosnum,jdbcType=VARCHAR},
            </if>
            <if test="checkApplicationId != null">
                #{checkApplicationId,jdbcType=VARCHAR},
            </if>
            <if test="checkItemGroupId != null">
                #{checkItemGroupId,jdbcType=VARCHAR},
            </if>
            <if test="checkItemGroupName != null">
                #{checkItemGroupName,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample"
            parameterType="cn.hs.publicclass.table.checkapplicationdetail.CheckApplicationDetailExample"
            resultType="java.lang.Long">
        select count(*) from check_application_detail
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update check_application_detail
        <set>
            <if test="record.hosnum != null">
                hosnum = #{record.hosnum,jdbcType=VARCHAR},
            </if>
            <if test="record.checkApplicationId != null">
                check_application_id = #{record.checkApplicationId,jdbcType=VARCHAR},
            </if>
            <if test="record.checkItemGroupId != null">
                check_item_group_id = #{record.checkItemGroupId,jdbcType=VARCHAR},
            </if>
            <if test="record.checkItemGroupName != null">
                check_item_group_name = #{record.checkItemGroupName,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update check_application_detail
        set hosnum = #{record.hosnum,jdbcType=VARCHAR},
        check_application_id = #{record.checkApplicationId,jdbcType=VARCHAR},
        check_item_group_id = #{record.checkItemGroupId,jdbcType=VARCHAR},
        check_item_group_name = #{record.checkItemGroupName,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective"
            parameterType="cn.hs.publicclass.table.checkapplicationdetail.CheckApplicationDetail">
        update check_application_detail
        <set>
            <if test="checkItemGroupName != null">
                check_item_group_name = #{checkItemGroupName,jdbcType=VARCHAR},
            </if>
        </set>
        where hosnum = #{hosnum,jdbcType=VARCHAR}
        and check_application_id = #{checkApplicationId,jdbcType=VARCHAR}
        and check_item_group_id = #{checkItemGroupId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey"
            parameterType="cn.hs.publicclass.table.checkapplicationdetail.CheckApplicationDetail">
    update check_application_detail
    set check_item_group_name = #{checkItemGroupName,jdbcType=VARCHAR}
    where hosnum = #{hosnum,jdbcType=VARCHAR}
      and check_application_id = #{checkApplicationId,jdbcType=VARCHAR}
      and check_item_group_id = #{checkItemGroupId,jdbcType=VARCHAR}
  </update>


    <select id="getCheckItemGroup" resultMap="BaseResultMap">
        select *
        from check_application_detail
        where hosnum = '10000' and check_application_id in
        <foreach collection="checkApplicationIdList" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
</mapper>